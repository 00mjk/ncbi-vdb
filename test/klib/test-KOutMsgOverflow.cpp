/*===========================================================================
*
*                            PUBLIC DOMAIN NOTICE
*               National Center for Biotechnology Information
*
*  This software/database is a "United States Government Work" under the
*  terms of the United States Copyright Act.  It was written as part of
*  the author's official duties as a United States Government employee and
*  thus cannot be copyrighted.  This software/database is freely available
*  to the public for use. The National Library of Medicine and the U.S.
*  Government have not placed any restriction on its use or reproduction.
*
*  Although all reasonable efforts have been taken to ensure the accuracy
*  and reliability of the software and data, the NLM and the U.S.
*  Government do not and cannot warrant the performance or results that
*  may be obtained by using this software or data. The NLM and the U.S.
*  Government disclaim all warranties, express or implied, including
*  warranties of performance, merchantability or fitness for any particular
*  purpose.
*
*  Please cite the author in any work or product based on this material.
*
* ===========================================================================
*
* A test to reproduce heap-buffer-overflow generated by gcc's AddressSanitizer:
*
* All further test cases where sizeof fmt < 4
* produce access to memory outside of fmt boundaries.
*
* To trigger the problem:
* Use gcc 7.3, glibc 2.29),
* add ASAN options (-fsanitize=address) to build/Makefile.gcc,
* make test-KOutMsgOverflow
* run test-KOutMsgOverflow
*
* The error is in memcmp(( format ), ( literal ), sizeof ( literal )) call
* in KOutVMsg when sizeof ( format ) < sizeof ( literal )
*/

#define ALL

#include <ktst/unit_test.hpp>

#include <klib/out.h>
#include <klib/writer.h> /* KWrtInit */

#include <cstring>

TEST_SUITE(KOutTestSuite);

#ifdef ALL
TEST_CASE(TestOUTMSGNull)
{
    OUTMSG((NULL));
}
TEST_CASE(TestOUTMSG1)
{
    OUTMSG((""));
}
TEST_CASE(TestOUTMSG2)
{
    OUTMSG(("1"));
}
TEST_CASE(TestOUTMSG2Eol)
{
    OUTMSG(("\n"));
}
TEST_CASE(TestOUTMSG3)
{
    OUTMSG(("12"));
}
TEST_CASE(TestOUTMSG4)
{
	    OUTMSG(("123"));
}
#endif
TEST_CASE(TestOUTMSG5)
{
	            OUTMSG(("1233"));
}
extern "C" {
#ifdef WINDOWS
    #define main wmain
#endif
    int main(int argc, char *argv[])
    {
        KWrtInit(argv[0], 0);
        return KOutTestSuite(argc, argv);
    }
}
